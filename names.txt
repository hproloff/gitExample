[roloff@public03] (1)$ ls
#hello#  private/  public/
[roloff@public03] (2)$ cd public
[roloff@public03] (3)$ ls
DSCP/  html/  html-s/  test/
[roloff@public03] (4)$ cd DSCP
[roloff@public03] (5)$ ls
1/  2/
[roloff@public03] (6)$ mkdir gitExample
[roloff@public03] (7)$ ls
1/  2/  gitExample/
[roloff@public03] (8)$ cd gitExample
[roloff@public03] (9)$ ls
[roloff@public03] (10)$ git config --global user.name "Harrison Roloff"
[roloff@public03] (11)$ git config --global user.email "hproloff@gmail.com"
[roloff@public03] (12)$ git config --global core.editor emacs
[roloff@public03] (13)$ git config --list
WARNING: terminal is not fully functional
Press RETURN to continue git init

filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
user.name=Harrison Roloff
user.email=hproloff@gmail.com
core.editor=emacs
[roloff@public03] (14)$ it: command not found
[roloff@public03] (15)$ 
[roloff@public03] (15)$ git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint: 
hint: 	git config --global init.defaultBranch <name>
hint: 
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint: 
hint: 	git branch -m <name>
Initialized empty Git repository in /afs/cs.wisc.edu/u/r/o/roloff/public/DSCP/gitExample/.git/
[roloff@public03] (16)$ emacs
emacs: Terminal type "dumb" is not powerful enough to run Emacs.
It lacks the ability to position the cursor.
If that is not the actual type of terminal you have,
use the Bourne shell command 'TERM=...; export TERM' (C-shell:
'setenv TERM ...') to specify the correct type.  It may be necessary
to do 'unset TERMINFO' (C-shell: 'unsetenv TERMINFO') as well.
[roloff@public03] (17)$ ls
[roloff@public03] (19)$ cd ..
[roloff@public03] (20)$ ls
1/  2/  gitExample/
[roloff@public03] (21)$ cd gitExample
[roloff@public03] (22)$ echo "boss,9082013476,Roloff,Harrison" > names.txt
[roloff@public03] (23)$ ls
names.txt
[roloff@public03] (24)$ git add names.txt
[roloff@public03] (25)$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   names.txt

[roloff@public03] (26)$ git commit -m "Create names.txt with a boss line."
[master (root-commit) d816f28] Create names.txt with a boss line.
 1 file changed, 1 insertion(+)
 create mode 100644 names.txt
[roloff@public03] (27)$ git branch -M main
[roloff@public03] (28)$ git remote add origin git@github.com:hproloff/gitExample.git
[roloff@public03] (29)$ git remote -v
origin	git@github.com:hproloff/gitExample.git (fetch)
origin	git@github.com:hproloff/gitExample.git (push)
[roloff@public03] (30)$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/u/r/o/roloff/.ssh/id_rsa): 
Created directory '/u/r/o/roloff/.ssh'.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /u/r/o/roloff/.ssh/id_rsa
Your public key has been saved in /u/r/o/roloff/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:5PMeLU2CSV0cIBdv+X/VNw6ffsfSviHO41KEU/hk+gA roloff@public03
The key's randomart image is:
+---[RSA 3072]----+
|        . +++.   |
|         E +.=   |
|        o o @    |
|       + o * +  .|
|        S . *...+|
|         o = o+.=|
|          + +. Bo|
|         . +o.+ B|
|          . o+.==|
+----[SHA256]-----+
[roloff@public03] (31)$ cat ~/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDMwRO4vZbN2JdYJSCNZlO/UuUgroelKPJEfupMtuKz0g3u4yMcx5WwcL58/v5xi1pCx6g1xZO39IXSJoW8I8VA26G6SAElETO1dlIqbSYgqrWE+QU83BfBIzZqnncpBzzgTYGZe6P6tuzSCqVII6Wtxzj3ot0+zfzi7I+Ta9FFtyI3LJAg3iytfU+iZmU/7DdYSvZFSCeDjRXeCVG5qa6JbPqEOeljJwH0TYwJtQNkrcmTZrtzb9AIJ7rZ30LLEkAxn6dG34aIovUxHHwF/oCTEL9yG7FMc3p3tykcxxFlvAGygAbwnzlmPMemtS+b6jPaZcO3nV8pVcIHuqsC6BDxPxKG3bDa9w4HkVA3DxyVA4uZ3jDUvLW9wqI+d3AnrzeGxXbQ9eJddqp/h7xPztUj6bhkDLp26zBYS4z8TJezVZBpjIqoQDTbNouNiNkGgwdfaMNv+cK3qY5Rfqxkf9uwcctb2nwocah+dG6xBeMZT1WE3ua7hHPbbLS4/CuZII8= roloff@public03
[roloff@public03] (32)$ git push origin main
The authenticity of host 'github.com (140.82.112.4)' can't be established.
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes

Warning: Permanently added 'github.com' (ED25519) to the list of known hosts.
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 266 bytes | 266.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:hproloff/gitExample.git
 * [new branch]      main -> main
[roloff@public03] (33)$ ls
names.txt
[roloff@public03] (34)$ cd ..
[roloff@public03] (35)$ ls
1/  2/  gitExample/
[roloff@public03] (36)$ git clone git@github.com:khoiness/gitExample.git ~/gitBoss
Cloning into '/u/r/o/roloff/gitBoss'...
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
remote: Enumerating objects: 3, done.        
remote: Counting objects: 100% (3/3), done.        
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0        
Receiving objects: 100% (3/3), done.
[roloff@public03] (37)$ ls
1/  2/  gitExample/
[roloff@public03] (38)$ cd gitboss
bash: cd: gitboss: No such file or directory
[roloff@public03] (39)$ cd gitBoss
bash: cd: gitBoss: No such file or directory
[roloff@public03] (40)$ cd ..
[roloff@public03] (41)$ ls
DSCP/  html/  html-s/  test/
[roloff@public03] (42)$ cd DSCP
[roloff@public03] (43)$ ls
1/  2/  gitExample/
[roloff@public03] (44)$ cd gitExample
[roloff@public03] (45)$ ls
names.txt
[roloff@public03] (46)$ mkdir gitBoss
[roloff@public03] (47)$ ls
gitBoss/  names.txt
[roloff@public03] (48)$ cd ..
[roloff@public03] (49)$ mkdir gitBoss
[roloff@public03] (50)$ ls
1/  2/  gitBoss/  gitExample/
[roloff@public03] (51)$ cd gitBoss
[roloff@public03] (52)$ ls
[roloff@public03] (53)$ git clone git@github.com:khoiness/gitExample.git 
Cloning into 'gitExample'...
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
remote: Enumerating objects: 3, done.        
remote: Counting objects: 100% (3/3), done.        
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0        
Receiving objects: 100% (3/3), done.
[roloff@public03] (54)$ ls
gitExample/
[roloff@public03] (55)$ cd gitExample
[roloff@public03] (56)$ ls
names.txt
[roloff@public03] (57)$ cd ~/gitBoss
[roloff@public03] (58)$ ls
names.txt
[roloff@public03] (59)$ ls
names.txt
[roloff@public03] (60)$ can names.txt
Command 'can' not found, but there are 19 similar ones.
[roloff@public03] (61)$ cat names.txt
boss,NetID,LastName,FirstName
[roloff@public03] (62)$ echo "employee,9082013476,Roloff,Harrison" >> names.txt
[roloff@public03] (63)$ ls
names.txt
[roloff@public03] (64)$ git add names.txt
[roloff@public03] (65)$ git commit -m "Add a line to boss's file."
[main 2cde3cb] Add a line to boss's file.
 1 file changed, 1 insertion(+)
[roloff@public03] (66)$ git pull origin main
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
From github.com:khoiness/gitExample
 * branch            main       -> FETCH_HEAD
Already up to date.
[roloff@public03] (67)$ git push origin main
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
ERROR: Permission to khoiness/gitExample.git denied to hproloff.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[roloff@public03] (68)$ git add names.txt
[roloff@public03] (69)$ git commit -m "Add a line to boss's file."
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
[roloff@public03] (70)$ git pull origin main
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
From github.com:khoiness/gitExample
 * branch            main       -> FETCH_HEAD
Already up to date.
[roloff@public03] (71)$ git push origin main
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 2 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 317 bytes | 317.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:khoiness/gitExample.git
   ecc1a0e..2cde3cb  main -> main
[roloff@public03] (72)$ ls
names.txt
[roloff@public03] (73)$ cd ..
[roloff@public03] (74)$ ls
gitBoss/  #hello#  names.txt  names.txt~  private/  public/
[roloff@public03] (75)$ cd public
[roloff@public03] (76)$ cd DSCP
[roloff@public03] (77)$ cd gitExample
[roloff@public03] (78)$ ls
gitBoss/  names.txt
[roloff@public03] (79)$ rm gitBoss
rm: cannot remove 'gitBoss': Is a directory
[roloff@public03] (80)$ rmdir gitBoss
[roloff@public03] (81)$ lls
Command 'lls' not found, did you mean:
  command 'rls' from snap rustup (1.26.0)
  command 'lli' from deb llvm-runtime (1:14.0-55~exp2)
  command 'ils' from deb sleuthkit (4.11.1+dfsg-1)
  command 'jls' from deb sleuthkit (4.11.1+dfsg-1)
  command 'lrs' from deb lrslib (0.71a-1)
  command 'llc' from deb llvm (1:14.0-55~exp2)
  command 'als' from deb atool (0.39.0-11)
  command 'les' from deb atm-tools (1:2.5.1-4build2)
  command 'fls' from deb sleuthkit (4.11.1+dfsg-1)
  command 'lvs' from deb lvm2 (2.03.11-2.1ubuntu4)
  command 'ols' from deb speech-tools (1:2.5.0-12)
  command 'ls' from deb coreutils (8.32-4.1ubuntu1)
  command 'hls' from deb hfsutils (3.2.6-15build2)
  command 'llt' from deb storebackup (3.2.1-2)
  command 'lld' from deb lld (1:14.0-55~exp2)
See 'snap info <snapname>' for additional versions.
[roloff@public03] (82)$ ls
names.txt
[roloff@public03] (83)$ git pull origin main
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
remote: Enumerating objects: 5, done.        
remote: Counting objects: 100% (5/5), done.        
remote: Compressing objects: 100% (2/2), done.        
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0        
Unpacking objects: 100% (3/3), 304 bytes | 21.00 KiB/s, done.
From github.com:hproloff/gitExample
 * branch            main       -> FETCH_HEAD
   d816f28..f0b4069  main       -> origin/main
Updating d816f28..f0b4069
Fast-forward
 names.txt | 1 +
 1 file changed, 1 insertion(+)
[roloff@public03] (84)$ cat names.txt
boss,9082013476,Roloff,Harrison
employee,peryniak,peryniak,victoria
[roloff@public03] (85)$ cat names.txt
boss,9082013476,Roloff,Harrison
employee,peryniak,peryniak,victoria
[roloff@public03] (86)$ git add names.txt
[roloff@public03] (87)$ git commit -m "Added line at the top with headers."
On branch main
nothing to commit, working tree clean
[roloff@public03] (88)$ git status
On branch main
nothing to commit, working tree clean
[roloff@public03] (89)$ ls
names.txt
[roloff@public03] (90)$ git pull origin main
Enter passphrase for key '/u/r/o/roloff/.ssh/id_rsa': 
From github.com:hproloff/gitExample
 * branch            main       -> FETCH_HEAD
Already up to date.
[roloff@public03] (91)$ cat names.txt
boss,9082013476,Roloff,Harrison
employee,peryniak,peryniak,victoria
[roloff@public03] (92)$ git diff
WARNING: terminal is not fully functional
Press RETURN to continue git diff

...skipping...
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
[roloff@public03] (93)$ it: command not found
[roloff@public03] (94)$ git diff
WARNING: terminal is not fully functional
Press RETURN to continue 

[roloff@public03] (95)$ git status
On branch main
nothing to commit, working tree clean
[roloff@public03] (96)$ git log
WARNING: terminal is not fully functional
Press RETURN to continue 

commit f0b40693242cb824309bf6f60f0d1e1f49b7b9dd (HEAD -> main, origin/main)
Author: victoriaperyniak <peryniak@wisc.edu>
Date:   Tue Feb 20 11:49:47 2024 -0600

    Added my employee line to boss's file

commit d816f2818f3483fff0e9c6cbe022168d068aad58
Author: Harrison Roloff <hproloff@gmail.com>
Date:   Tue Feb 20 11:28:10 2024 -0600

    Create names.txt with a boss line.
[roloff@public03] (97)$ 
